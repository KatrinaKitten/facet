// Facet v0.1.0 | https://github.com/katrinakitten/facet
const facet={defineComponent(e,t,{shadowMode:n="closed",observeAttrs:o=[],applyMixins:i=[]}){const a=new Set(i.concat(facet._.globalMixins).map((e=>facet._.mixins[e])).filter((e=>e)));window.customElements.define(e,class extends HTMLElement{static observedAttributes=o;#e="none"!==n.toLowerCase()?this.attachShadow({mode:n.toLowerCase()}):this;connectedCallback(){const e=t.content.cloneNode(!0);for(let t of a)e.append(t.content.cloneNode(!0));for(let t of e.querySelectorAll(facet._.sel("script[on]"))){let e=t.parentElement??this,n=new Function("host","root","event",t.innerText).bind(e,this,this.#e);for(let o of t.getAttribute("on").split(/\s+/g))e.addEventListener(o,n);t.remove()}for(let t of e.querySelectorAll(facet._.sel("[inherit]"))){for(let e of t.getAttribute("inherit").split(/\s+/g)){const[,n,i,a]=e.match(/^([^\/>"'=]+)(?:>([^\/>"'=]+))?(?:\/(\w+))?$/),s=this.getAttribute(n),c=window[a];s&&t.setAttribute(i??n,c?.(s,void 0,t,this)??s),o.includes(n)&&this.addEventListener("attributeChanged",(({detail:{name:e,oldValue:o,newValue:a}})=>{e===n&&t.setAttribute(i??n,c?.(a,o,t,this)??a)}))}t.removeAttribute("inherit")}this.#e.append(e),this.#t("connect")}disconnectedCallback(){this.#t("disconnect")}adoptedCallback(){this.#t("adopt")}attributeChangedCallback(e,t,n){this.#t("attributeChanged",{name:e,oldValue:t,newValue:n})}#t(e,t={}){this.dispatchEvent(new CustomEvent(e,{detail:{...t,component:this}}))}})},defineMixin(e,t,n=!1){facet._.mixins[e]=t,n&&facet._.globalMixins.push(e)},discoverDeclarativeComponents(e){for(let t of e.querySelectorAll(facet._.sel("template[mixin]")))facet.defineMixin(t.getAttribute("mixin"),t,t.hasAttribute("global"));for(let t of e.querySelectorAll(facet._.sel("template[component]")))facet.defineComponent(t.getAttribute("component"),t,{shadowMode:t.getAttribute("shadow")??"closed",observeAttrs:t.getAttribute("observe")?.split(/\s+/g)??[],applyMixins:t.getAttribute("mixins")?.split(/\s+/g)??[]})},createTemplateElement(e){const t=document.createElement("template");return t.innerHTML=e,t},config:{useNamespace:!!document.currentScript?.hasAttribute?.("namespace"),autoDiscover:document.currentScript&&!document.currentScript.hasAttribute("libonly")},_:{mixins:{},globalMixins:[],sel:e=>facet.config.useNamespace?e+"[facet]":e}};facet.config.autoDiscover&&(e=>{"interactive"===document.readyState?e():document.addEventListener("DOMContentLoaded",e,{once:!0})})((()=>facet.discoverDeclarativeComponents(document.body)));